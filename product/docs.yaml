openapi: 3.0.1
info:
  version: 1.0.0
  title: Product API
  description: Restful API that deals with Products
  contact:
    name: Dev Contacts
    url: "https://www.ecomm.com.br"
    email: devs@ecomm.com.br
servers:
  - url: "http://localhost:3000"
paths:
  /products:
    summary: creates a product
    description: "Given provided product data, creates a product in the database"
    post:
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateProductRequest"
      responses:
        201:
          description: Product created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductResponse"
        401:
          description: authentication required
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        400:
          description: authorization header malformed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        403:
          description: forbiden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    get:
      responses:
        200:
          description: Product created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductResponse"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ImageResponse:
      type: object
      properties:
        id:
          type: integer
        url:
          type: string
        description:
          type: string
        createdDate:
          type: string
        updatedDate:
          type: string
    FetureResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        createdDate:
          type: string
        updatedDate:
          type: string
    ProductResponse:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: string
        name:
          type: string
        description:
          type: string
        category:
          type: string
        quantity:
          type: integer
        value:
          type: number
        createdDate:
          type: string
        updatedDate:
          type: string
        fetures:
          type: array
          items:
            $ref: "#/components/schemas/FetureResponse"
        images:
          type: array
          items:
            $ref: "#/components/schemas/ImageResponse"
    CreateProductRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        category:
          type: string
        quantity:
          type: integer
        value:
          type: number
        fetures:
          type: array
          items:
            $ref: "#/components/schemas/CreateFetureRequest"
        images:
          type: array
          items:
            $ref: "#/components/schemas/CreateImageRequest"
    CreateImageRequest:
      type: object
      properties:
        url:
          type: string
        description:
          type: string
    CreateFetureRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string